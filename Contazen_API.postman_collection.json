{
  "info": {
    "name": "Contazen API",
    "description": "Complete Contazen API collection with all endpoints. Version 3.1.0 includes:\n- Bearer token authentication (sk_live_ prefix)\n- Full CRUD operations for Clients, Invoices, Products, Expenses, Suppliers\n- **Expense Management**: Streamlined creation with only 4 required fields (supplier_id, amount, vat, date), smart defaults for optional fields\n- **Single Attachment Support**: Each expense supports ONE attachment (PDF/image, max 10MB) stored in 'image' field\n- **Hard Delete**: Expenses use permanent hard delete (not soft delete)\n- **Simplified VAT Rates**: Supports 0%, 5%, 9%, 11%, 19%, 21% (21% standard in Romania)\n- **Expense Categories**: CRUD operations for expense categorization\n- **Supplier Management**: Full CRUD for vendor management with hard delete\n- **Product Stock Management**: Adjust product stock levels\n- **Invoice Enhancements**: Void/unvoid, delete, send to SPV, totals and stats endpoints\n- **Invoice email functionality**: Auto-send on creation and manual send endpoint\n- **Email customization**: Override client email addresses and automatic email templates\n- **Automatic JSON response format** via Accept header\n- **Enhanced client validation**: CUI/CIF format validation, uniqueness checks, București sector validation\n- **Client type identification**: B2B/B2C classification based on is_firm field\n- **Complete client data**: All address fields included in list responses\n- **Consistent null values** for empty fields (not empty strings)\n- **Simplified product structure**: Essential fields only (name, description, currency, price, vat_rate, UBL codes)\n- **RON equivalent values** for non-RON currency invoices (exchange_rate, amounts_ron)\n- **Product integration**: Use existing products by CzUid or auto-create new ones\n- **Stripe-style expand parameter**: List invoices with optional lines/payments expansion\n- **Payment validation**: Prevents payments on already paid invoices\n- **CSV Export**: Export expenses to CSV format with filtering\n- Invoice creation with existing client_id OR inline client_data\n- Automatic B2B client deduplication by CUI/CIF\n- Romanian CIF validation for RO clients\n- București sector validation for e-Invoice\n- PDF export with dual modes (direct download or URL)\n- E-Factura support with UBL codes and taxare inversă\n- Dynamic date generation in pre-request scripts\n- Settings endpoint for configuration data\n- Rate limiting: 1000 requests/hour, 100 creates/minute\n- Multi-work-point access within parent company",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{api_key}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for requests",
          "pm.variables.set('timestamp', new Date().toISOString());",
          "",
          "// Set current date in Y-m-d format",
          "const today = new Date();",
          "const year = today.getFullYear();",
          "const month = String(today.getMonth() + 1).padStart(2, '0');",
          "const day = String(today.getDate()).padStart(2, '0');",
          "pm.variables.set('current_date', `${year}-${month}-${day}`);",
          "pm.variables.set('current_year', year.toString());",
          "",
          "// Set due date (30 days from today)",
          "const dueDate = new Date();",
          "dueDate.setDate(dueDate.getDate() + 30);",
          "const dueYear = dueDate.getFullYear();",
          "const dueMonth = String(dueDate.getMonth() + 1).padStart(2, '0');",
          "const dueDay = String(dueDate.getDate()).padStart(2, '0');",
          "pm.variables.set('due_date', `${dueYear}-${dueMonth}-${dueDay}`);",
          "",
          "console.log('Current date:', pm.variables.get('current_date'));",
          "console.log('Due date:', pm.variables.get('due_date'));"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Check for rate limit headers",
          "if (pm.response.headers.has('X-RateLimit-Limit')) {",
          "    console.log('Rate Limit:', pm.response.headers.get('X-RateLimit-Limit'));",
          "    console.log('Remaining:', pm.response.headers.get('X-RateLimit-Remaining'));",
          "}",
          "",
          "// Check for request ID",
          "if (pm.response.headers.has('X-Request-Id')) {",
          "    console.log('Request ID:', pm.response.headers.get('X-Request-Id'));",
          "}",
          "",
          "// Parse JSON response if available",
          "try {",
          "    const jsonData = pm.response.json();",
          "    ",
          "    // Store client_id if creating a client",
          "    if (pm.info.requestName === 'Create Client' && jsonData.id) {",
          "        pm.collectionVariables.set('client_id', jsonData.id);",
          "        console.log('Stored client_id:', jsonData.id);",
          "    }",
          "    ",
          "    // Store invoice_id if creating a bill",
          "    if (pm.info.requestName === 'Create Invoice' && jsonData.id) {",
          "        pm.collectionVariables.set('invoice_id', jsonData.id);",
          "        console.log('Stored invoice_id:', jsonData.id);",
          "    }",
          "    ",
          "    // Store product_id if creating a product",
          "    if (pm.info.requestName === 'Create Product' && jsonData.id) {",
          "        pm.collectionVariables.set('product_id', jsonData.id);",
          "        console.log('Stored product_id:', jsonData.id);",
          "    }",
          "    ",
          "    // Store expense_id if creating an expense",
          "    if (pm.info.requestName === 'Create Expense' && jsonData.id) {",
          "        pm.collectionVariables.set('expense_id', jsonData.id);",
          "        console.log('Stored expense_id:', jsonData.id);",
          "    }",
          "    ",
          "    // Store supplier_id if creating a supplier",
          "    if (pm.info.requestName === 'Create Supplier' && jsonData.id) {",
          "        pm.collectionVariables.set('supplier_id', jsonData.id);",
          "        console.log('Stored supplier_id:', jsonData.id);",
          "    }",
          "    ",
          "    // Store category_id if creating a category",
          "    if (pm.info.requestName === 'Create Expense Category' && jsonData.id) {",
          "        pm.collectionVariables.set('category_id', jsonData.id);",
          "        console.log('Stored category_id:', jsonData.id);",
          "    }",
          "} catch(e) {",
          "    // Not JSON response",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://api.contazen.ro",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "api_subdomain_url",
      "value": "https://api.contazen.ro",
      "type": "string",
      "description": "API subdomain URL (use this for /v1/* endpoints) - Set to api.contazen.ro for production"
    },
    {
      "key": "api_key",
      "value": "sk_live_YOUR_API_KEY_HERE",
      "type": "string",
      "description": "Your API key - Get it from Settings > API in the web interface"
    },
    {
      "key": "locale",
      "value": "en",
      "type": "string",
      "description": "API language (en or ro) - Can be set via locale parameter, Accept-Language header, or defaults to English"
    },
    {
      "key": "client_id",
      "value": "REPLACE_WITH_ACTUAL_CLIENT_ID",
      "type": "string",
      "description": "Client CzUid for testing - Run 'Create Client' first to get a valid ID"
    },
    {
      "key": "invoice_id",
      "value": "REPLACE_WITH_ACTUAL_INVOICE_ID",
      "type": "string",
      "description": "Invoice CzUid for testing - Run 'Create Invoice' first to get a valid ID"
    },
    {
      "key": "series_id",
      "value": "REPLACE_WITH_ACTUAL_SERIES_ID",
      "type": "string",
      "description": "Invoice series CzUid - Get from your firm's series settings"
    },
    {
      "key": "product_id",
      "value": "REPLACE_WITH_ACTUAL_PRODUCT_ID",
      "type": "string",
      "description": "Product CzUid for testing - Run 'Create Product' first to get a valid ID"
    },
    {
      "key": "expense_id",
      "value": "REPLACE_WITH_ACTUAL_EXPENSE_ID",
      "type": "string",
      "description": "Expense CzUid for testing - Run 'Create Expense' first to get a valid ID"
    },
    {
      "key": "supplier_id",
      "value": "REPLACE_WITH_ACTUAL_SUPPLIER_ID",
      "type": "string",
      "description": "Supplier CzUid for testing - Run 'Create Supplier' first to get a valid ID"
    },
    {
      "key": "category_id",
      "value": "REPLACE_WITH_ACTUAL_CATEGORY_ID",
      "type": "string",
      "description": "Expense category CzUid for testing"
    },
    {
      "key": "attachment_id",
      "value": "REPLACE_WITH_ACTUAL_ATTACHMENT_ID",
      "type": "string",
      "description": "Attachment CzUid for testing"
    }
  ],
  "item": [
    {
      "name": "Clients",
      "item": [
        {
          "name": "List Clients",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/clients?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "clients"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "per_page",
                  "value": "50",
                  "description": "Items per page (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true,
                  "description": "Search term"
                },
                {
                  "key": "sort",
                  "value": "name",
                  "disabled": true,
                  "description": "Sort field (name, created_at)"
                },
                {
                  "key": "order",
                  "value": "asc",
                  "disabled": true,
                  "description": "Sort order (asc, desc)"
                }
              ]
            }
          }
        },
        {
          "name": "Get Client Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/clients/{{client_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "clients",
                "{{client_id}}"
              ]
            },
            "description": "Get details of a specific client by CzUid"
          }
        },
        {
          "name": "Create Client",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Client SRL\",\n    \"email\": \"client@example.com\",\n    \"phone\": \"0722123456\",\n    \"cui\": \"12345678\",\n    \"cui_prefix\": \"RO\",\n    \"rc\": \"J40/1234/2024\",\n    \"address\": \"Str. Test nr. 1\",\n    \"city\": \"București\",\n    \"county\": \"București\",\n    \"country\": \"RO\",\n    \"postal_code\": \"010101\",\n    \"iban\": \"RO49AAAA1B31007593840000\",\n    \"bank\": \"Test Bank\",\n    \"contact_person\": \"Ion Popescu\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/clients",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "clients"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Client",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Client Name SRL\",\n    \"email\": \"updated@example.com\",\n    \"phone\": \"0722999888\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/clients/{{client_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "clients",
                "{{client_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Client",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/clients/{{client_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "clients",
                "{{client_id}}"
              ]
            },
            "description": "Soft delete a client (cannot delete if has bills)"
          }
        }
      ]
    },
    {
      "name": "Invoices",
      "item": [
        {
          "name": "List Invoices",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "50"
                },
                {
                  "key": "expand[]",
                  "value": "lines",
                  "disabled": true,
                  "description": "Expand lines (items) in response. Use multiple expand[] params for multiple expansions"
                },
                {
                  "key": "expand[]",
                  "value": "payments",
                  "disabled": true,
                  "description": "Expand payments in response"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}",
                  "disabled": true,
                  "description": "Filter by client CzUid"
                },
                {
                  "key": "series_id",
                  "value": "{{series_id}}",
                  "disabled": true,
                  "description": "Filter by series CzUid"
                },
                {
                  "key": "document_type",
                  "value": "fiscal",
                  "disabled": true,
                  "description": "fiscal, proforma"
                },
                {
                  "key": "status",
                  "value": "paid",
                  "disabled": true,
                  "description": "draft, sent, paid, overdue, cancelled"
                },
                {
                  "key": "currency",
                  "value": "EUR",
                  "disabled": true,
                  "description": "Filter by currency code (e.g., RON, EUR, USD)"
                },
                {
                  "key": "is_paid",
                  "value": "0",
                  "disabled": true,
                  "description": "0 or 1"
                },
                {
                  "key": "start_date",
                  "value": "2024-01-01",
                  "disabled": true,
                  "description": "Start date (Y-m-d)"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31",
                  "disabled": true,
                  "description": "End date (Y-m-d)"
                },
                {
                  "key": "sort",
                  "value": "created_at",
                  "disabled": true,
                  "description": "created_at, date, due_date, total, number"
                },
                {
                  "key": "order",
                  "value": "desc",
                  "disabled": true,
                  "description": "asc or desc"
                }
              ]
            },
            "description": "List invoices with pagination and filtering. By default returns basic invoice data only (no lines/items or payments). Use the expand parameter to include nested data:\n\n**Expand Options (Stripe-style):**\n- `expand[]=lines` - Include invoice line items\n- `expand[]=payments` - Include payment records\n- `expand[]=lines&expand[]=payments` - Include both\n\n**Performance Note:** Expanding nested data on list requests may impact response time. Only expand what you need.\n\n**Response:** Returns paginated list with basic invoice fields by default. Expanded fields are only included when specifically requested."
          }
        },
        {
          "name": "Get Invoice Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}"
              ]
            }
          }
        },
        {
          "name": "Create Invoice (with existing client)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"document_type\": \"fiscal\",\n    \"date\": \"{{current_date}}\",\n    \"due_date\": \"{{due_date}}\",\n    \"currency\": \"RON\",\n    \"is_draft\": 0,\n    \"efactura_enabled\": 1,\n    \"observations\": \"Factură creată prin API la {{timestamp}}\",\n    \"items\": [\n        {\n            \"description\": \"Servicii consultanță\",\n            \"quantity\": 1,\n            \"price\": 1000,\n            \"vat_rate\": 21,\n            \"unit\": \"ore\",\n            \"ubl_um\": \"HUR\"\n        },\n        {\n            \"description\": \"Dezvoltare software\",\n            \"quantity\": 10,\n            \"price\": 150,\n            \"vat_rate\": 21,\n            \"unit\": \"ore\",\n            \"ubl_um\": \"HUR\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices"
              ]
            },
            "description": "Create a new bill/invoice with an existing client using client_id. VAT key is automatically determined from vat_rate for proper dropdown display in UI. You can override with explicit vat_key if needed."
          }
        },
        {
          "name": "Mark Invoice as Paid",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 2975.00,\n    \"payment_date\": \"{{current_date}}\",\n    \"payment_method\": \"bank_transfer\",\n    \"observations\": \"Plată prin transfer bancar\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/pay",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "pay"
              ]
            },
            "description": "Record a payment for an invoice. Returns is_paid: true when fully paid, false for partial payments. Includes total_amount and total_paid for transparency. **Note**: Invoices already marked as paid cannot accept additional payments and will return a validation error."
          }
        },
        {
          "name": "Download Invoice PDF",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/pdf",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "pdf"
              ]
            },
            "description": "Download the invoice as PDF directly (default mode). The PDF file will be returned as binary data with appropriate headers."
          }
        },
        {
          "name": "Send Invoice by Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"customer@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/send",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "send"
              ]
            },
            "description": "Send an existing invoice to client by email. Optional email parameter overrides client's email address. Falls back to client's email if no email provided."
          }
        },
        {
          "name": "Void Invoice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Customer request\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/void",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "void"
              ]
            },
            "description": "Void an invoice. For fiscal invoices with invoice numbers, this marks them as voided following Romanian accounting regulations. For draft invoices (no invoice number), this marks them as cancelled. **Note**: Voided invoices cannot be edited or sent, only deleted."
          }
        },
        {
          "name": "Unvoid Invoice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/unvoid",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "unvoid"
              ]
            },
            "description": "Unvoid a previously voided invoice. This restores the invoice to its previous state, allowing it to be edited and sent again. Only voided invoices can be unvoided."
          }
        },
        {
          "name": "Delete Invoice",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}"
              ]
            },
            "description": "Permanently delete an invoice. **Important**: Only draft invoices (no invoice number) or voided invoices can be deleted. Fiscal invoices with invoice numbers must be voided first before deletion. **Sequential Numbering Rule**: Voided invoices with numbers can only be deleted if they are the last invoice in their series to maintain sequential invoice numbering."
          }
        },
        {
          "name": "Send Invoice to SPV",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"test_mode\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/invoices/{{invoice_id}}/send-to-spv",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "{{invoice_id}}",
                "send-to-spv"
              ]
            },
            "description": "Send an invoice to the SPV (e-Factura test environment). This allows testing e-Factura submission without affecting production data. The invoice must be e-Factura enabled and the firm must have SPV OAuth credentials configured."
          }
        },
        {
          "name": "Get Invoice Totals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices/totals?start_date={{current_date}}&end_date={{due_date}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "totals"
              ],
              "query": [
                {
                  "key": "start_date",
                  "value": "{{current_date}}",
                  "description": "Start date for period (Y-m-d)"
                },
                {
                  "key": "end_date",
                  "value": "{{due_date}}",
                  "description": "End date for period (Y-m-d)"
                },
                {
                  "key": "currency",
                  "value": "RON",
                  "disabled": true,
                  "description": "Filter by specific currency"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}",
                  "disabled": true,
                  "description": "Filter by specific client"
                },
                {
                  "key": "series_id",
                  "value": "{{series_id}}",
                  "disabled": true,
                  "description": "Filter by specific series"
                },
                {
                  "key": "is_paid",
                  "value": "1",
                  "disabled": true,
                  "description": "Filter by payment status (0 or 1)"
                }
              ]
            },
            "description": "Get aggregated invoice totals for a specific period. Returns sum of invoice amounts grouped by currency, payment status, and other dimensions."
          }
        },
        {
          "name": "Get Invoice Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/invoices/stats?year={{current_year}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "invoices",
                "stats"
              ],
              "query": [
                {
                  "key": "year",
                  "value": "{{current_year}}",
                  "description": "Year for statistics (defaults to current year)"
                },
                {
                  "key": "month",
                  "value": "1",
                  "disabled": true,
                  "description": "Specific month (1-12)"
                },
                {
                  "key": "quarter",
                  "value": "1",
                  "disabled": true,
                  "description": "Specific quarter (1-4)"
                }
              ]
            },
            "description": "Get invoice statistics including counts by status, monthly trends, top clients, and revenue breakdown."
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/products?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "per_page",
                  "value": "50",
                  "description": "Items per page (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true,
                  "description": "Search term (name)"
                },
                {
                  "key": "category_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by category"
                },
                {
                  "key": "is_active",
                  "value": "1",
                  "disabled": true,
                  "description": "0 or 1"
                },
                {
                  "key": "sort",
                  "value": "name",
                  "disabled": true,
                  "description": "name, price, created_at"
                },
                {
                  "key": "order",
                  "value": "asc",
                  "disabled": true,
                  "description": "asc or desc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products",
                "{{product_id}}"
              ]
            },
            "description": "Get details of a specific product by CzUid"
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Product\",\n    \"description\": \"Test product description\",\n    \"currency\": \"RON\",\n    \"price\": 100.00,\n    \"vat_rate\": 21,\n    \"unit_of_measure\": \"buc\",\n    \"ubl_um\": \"H87\",\n    \"ubl_nc\": \"84713000\",\n    \"ubl_cpv\": \"30213100-6\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/products",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products"
              ]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Product Name\",\n    \"price\": 120.00,\n    \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products",
                "{{product_id}}"
              ]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products",
                "{{product_id}}"
              ]
            },
            "description": "Delete a product (cannot delete if used in invoices)"
          }
        },
        {
          "name": "Adjust Product Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"adjustment\": 10,\n    \"reason\": \"Inventory recount\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/products/{{product_id}}/stock",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "products",
                "{{product_id}}",
                "stock"
              ]
            },
            "description": "Adjust product stock level. Use positive values to increase stock, negative values to decrease. The adjustment is added to the current stock level."
          }
        }
      ]
    },
    {
      "name": "Expenses",
      "item": [
        {
          "name": "List Expenses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expenses?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "per_page",
                  "value": "50",
                  "description": "Items per page (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true,
                  "description": "Search in supplier name or document number"
                },
                {
                  "key": "supplier_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by supplier CzUid"
                },
                {
                  "key": "category_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by category CzUid"
                },
                {
                  "key": "is_paid",
                  "value": "1",
                  "disabled": true,
                  "description": "Filter by payment status (0 or 1)"
                },
                {
                  "key": "start_date",
                  "value": "2024-01-01",
                  "disabled": true,
                  "description": "Start date (Y-m-d)"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31",
                  "disabled": true,
                  "description": "End date (Y-m-d)"
                },
                {
                  "key": "min_amount",
                  "value": "100",
                  "disabled": true,
                  "description": "Minimum total amount"
                },
                {
                  "key": "max_amount",
                  "value": "1000",
                  "disabled": true,
                  "description": "Maximum total amount"
                },
                {
                  "key": "sort",
                  "value": "date",
                  "disabled": true,
                  "description": "Sort field (date, total, supplier_name, created_at)"
                },
                {
                  "key": "order",
                  "value": "desc",
                  "disabled": true,
                  "description": "Sort order (asc or desc)"
                }
              ]
            },
            "description": "List expenses with pagination and filtering options."
          }
        },
        {
          "name": "Get Expense Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expenses/{{expense_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "{{expense_id}}"
              ]
            },
            "description": "Get detailed information about a specific expense."
          }
        },
        {
          "name": "Create Expense",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"supplier_id\": \"{{supplier_id}}\",\n    \"amount\": 100.00,\n    \"vat\": 21,\n    \"date\": \"{{current_date}}\",\n    \"description\": \"Office supplies purchase\",\n    \"reference\": \"INV-2024-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/expenses",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses"
              ]
            },
            "description": "Create a new expense record with minimal required fields. Only 4 fields are required: supplier_id (Supplier CzUid), amount (positive number), vat (0, 5, 9, 11, 19, 21), and date (Y-m-d format). All other fields are optional with smart defaults: currency (RON), due_date (30 days from today), paid_date (today if is_paid=true), payment_type (1 if is_paid=true), category_id (0)."
          }
        },
        {
          "name": "Update Expense",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reference\": \"INV-2024-001-UPDATED\",\n    \"description\": \"Updated description\",\n    \"is_paid\": 1,\n    \"paid_date\": \"{{current_date}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/expenses/{{expense_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "{{expense_id}}"
              ]
            },
            "description": "Update an existing expense. All fields are optional."
          }
        },
        {
          "name": "Delete Expense",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expenses/{{expense_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "{{expense_id}}"
              ]
            },
            "description": "Permanently delete an expense (hard delete, not soft delete). This is a HARD delete operation - the expense is permanently removed from the database and cannot be undone."
          }
        },
        {
          "name": "Mark Expense as Paid",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paid_date\": \"{{current_date}}\",\n    \"payment_type\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/expenses/{{expense_id}}/pay",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "{{expense_id}}",
                "pay"
              ]
            },
            "description": "Mark an expense as paid with payment details."
          }
        },
        {
          "name": "Upload Expense Attachment",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "",
                  "description": "PDF or image file (PDF, JPG, JPEG, PNG, max 10MB)"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/v1/expenses/{{expense_id}}/attachments",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "{{expense_id}}",
                "attachments"
              ]
            },
            "description": "Upload a single PDF or image attachment for an expense. Each expense supports only ONE attachment (stored in the 'image' field). Uploading a new file will replace any existing attachment. Supported types: PDF, JPG, JPEG, PNG (max 10MB)."
          }
        },
        {
          "name": "Export Expenses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expenses/export?start_date=2024-01-01&end_date=2024-12-31",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expenses",
                "export"
              ],
              "query": [
                {
                  "key": "start_date",
                  "value": "2024-01-01",
                  "description": "Start date (Y-m-d format)"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31",
                  "description": "End date (Y-m-d format)"
                },
                {
                  "key": "supplier_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by supplier CzUid"
                },
                {
                  "key": "category_id",
                  "value": "",
                  "disabled": true,
                  "description": "Filter by category ID"
                },
                {
                  "key": "status",
                  "value": "paid",
                  "disabled": true,
                  "description": "Filter by payment status (paid, unpaid, overdue)"
                }
              ]
            },
            "description": "Export expenses to CSV format with optional filters for date range, supplier, category, and payment status."
          }
        }
      ]
    },
    {
      "name": "Expense Categories",
      "item": [
        {
          "name": "List Expense Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expense-categories",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expense-categories"
              ],
              "query": [
                {
                  "key": "is_active",
                  "value": "1",
                  "disabled": true,
                  "description": "Filter by active status"
                }
              ]
            },
            "description": "Get list of all expense categories."
          }
        },
        {
          "name": "Get Category Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expense-categories/{{category_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expense-categories",
                "{{category_id}}"
              ]
            },
            "description": "Get details of a specific expense category."
          }
        },
        {
          "name": "Create Expense Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Office Supplies\",\n    \"description\": \"Stationery and office equipment\",\n    \"color\": \"#4CAF50\",\n    \"is_active\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/expense-categories",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expense-categories"
              ]
            },
            "description": "Create a new expense category."
          }
        },
        {
          "name": "Update Expense Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Category Name\",\n    \"color\": \"#2196F3\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/expense-categories/{{category_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expense-categories",
                "{{category_id}}"
              ]
            },
            "description": "Update an existing expense category."
          }
        },
        {
          "name": "Delete Expense Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/expense-categories/{{category_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "expense-categories",
                "{{category_id}}"
              ]
            },
            "description": "Delete an expense category. Cannot delete if expenses are using it."
          }
        }
      ]
    },
    {
      "name": "Suppliers",
      "item": [
        {
          "name": "List Suppliers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/suppliers?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "suppliers"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "per_page",
                  "value": "50",
                  "description": "Items per page (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true,
                  "description": "Search in supplier name or CUI"
                },
                {
                  "key": "is_active",
                  "value": "1",
                  "disabled": true,
                  "description": "Filter by active status"
                },
                {
                  "key": "sort",
                  "value": "name",
                  "disabled": true,
                  "description": "Sort field (name, created_at, total_expenses)"
                },
                {
                  "key": "order",
                  "value": "asc",
                  "disabled": true,
                  "description": "Sort order (asc or desc)"
                }
              ]
            },
            "description": "List all suppliers with pagination and filtering."
          }
        },
        {
          "name": "Get Supplier Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/suppliers/{{supplier_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "suppliers",
                "{{supplier_id}}"
              ]
            },
            "description": "Get detailed information about a specific supplier including expense statistics."
          }
        },
        {
          "name": "Create Supplier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Supplier SRL\",\n    \"cui\": \"RO87654321\",\n    \"rc\": \"J40/5678/2024\",\n    \"address\": \"Str. Furnizorilor nr. 10\",\n    \"city\": \"București\",\n    \"county\": \"București\",\n    \"country\": \"RO\",\n    \"postal_code\": \"020202\",\n    \"email\": \"supplier@example.com\",\n    \"phone\": \"+40731234567\",\n    \"iban\": \"RO49AAAA1B31007593840001\",\n    \"bank\": \"BRD\",\n    \"contact_person\": \"Maria Popescu\",\n    \"website\": \"https://supplier.example.com\",\n    \"notes\": \"Preferred supplier for office supplies\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/suppliers",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "suppliers"
              ]
            },
            "description": "Create a new supplier."
          }
        },
        {
          "name": "Update Supplier",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Supplier Name\",\n    \"email\": \"newemail@supplier.com\",\n    \"notes\": \"Updated notes about supplier\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/suppliers/{{supplier_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "suppliers",
                "{{supplier_id}}"
              ]
            },
            "description": "Update an existing supplier. All fields are optional."
          }
        },
        {
          "name": "Delete Supplier",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/suppliers/{{supplier_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "suppliers",
                "{{supplier_id}}"
              ]
            },
            "description": "Delete a supplier. This is a hard delete operation. Cannot delete if supplier has associated expenses."
          }
        }
      ]
    },
    {
      "name": "Settings",
      "item": [
        {
          "name": "Get Account Settings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/settings",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "settings"
              ]
            },
            "description": "Retrieve account settings and configuration including firm details, invoice series, e-Factura status, bank accounts, currencies, and subscription information. This is a read-only endpoint that provides comprehensive configuration data for the authenticated firm."
          }
        }
      ]
    }
  ]
}